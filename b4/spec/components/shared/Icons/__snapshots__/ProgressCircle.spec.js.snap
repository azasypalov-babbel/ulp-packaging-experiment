// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProgressCircle with progress 0 renders 1`] = `
.c0 {
  -webkit-transform: rotate(270deg);
  -ms-transform: rotate(270deg);
  transform: rotate(270deg);
  height: 96px;
  width: 96px;
  font-size: 48px;
}

<WithTheme(ProgressCircle)
  progress={0}
  size="jumbo"
>
  <ProgressCircle
    progress={0}
    size="jumbo"
    theme="[mocked theme]"
  >
    <styled.svg
      size="jumbo"
    >
      <svg
        className="c0"
        size="jumbo"
      >
        <ForwardRef
          cx="1em"
          cy="1em"
          stroke="#becedd"
          theme="[mocked theme]"
        >
          <PoseElement
            cx="1em"
            cy="1em"
            elementType="circle"
            innerRef={null}
            poseConfig={
              Object {
                "hover": Object {
                  "fill": [Function],
                  "r": "calc(1em - (5px / 2))",
                  "strokeWidth": 5,
                },
                "init": Object {
                  "fill": [Function],
                  "r": "calc(1em - (3px / 2))",
                  "strokeWidth": 3,
                },
              }
            }
            stroke="#becedd"
            theme="[mocked theme]"
          >
            <circle
              cx="1em"
              cy="1em"
              stroke="#becedd"
            />
          </PoseElement>
        </ForwardRef>
        <ForwardRef
          cx="1em"
          cy="1em"
          fill="transparent"
          pose="ended"
          stroke="currentColor"
          strokeDasharray="314.1592653589793%"
          strokeLinecap="round"
        >
          <PoseElement
            cx="1em"
            cy="1em"
            elementType="circle"
            fill="transparent"
            innerRef={null}
            pose="ended"
            poseConfig={
              Object {
                "ended": Object {
                  "opacity": 0,
                  "transition": Object {
                    "delay": "500",
                    "duration": "500",
                  },
                },
                "hover": Object {
                  "r": "calc(1em - (5px / 2))",
                  "strokeWidth": 5,
                  "transition": Object {
                    "duration": "500",
                  },
                },
                "init": Object {
                  "r": "calc(1em - (3px / 2))",
                  "strokeWidth": 3,
                  "transition": Object {
                    "duration": "500",
                  },
                },
                "playing": Object {
                  "opacity": 1,
                  "strokeDashoffset": 0,
                  "transition": Object {
                    "strokeDashoffset": [Function],
                  },
                },
              }
            }
            stroke="currentColor"
            strokeDasharray="314.1592653589793%"
            strokeLinecap="round"
          >
            <circle
              cx="1em"
              cy="1em"
              fill="transparent"
              stroke="currentColor"
              strokeDasharray="314.1592653589793%"
              strokeLinecap="round"
            />
          </PoseElement>
        </ForwardRef>
      </svg>
    </styled.svg>
  </ProgressCircle>
</WithTheme(ProgressCircle)>
`;

exports[`ProgressCircle with progress 1 renders 1`] = `
.c0 {
  -webkit-transform: rotate(270deg);
  -ms-transform: rotate(270deg);
  transform: rotate(270deg);
}

@media (min-width:900px) {
  .c0 {
    height: 56px;
    width: 56px;
    font-size: 28px;
  }
}

@media (min-width:1600px) {
  .c0 {
    height: 96px;
    width: 96px;
    font-size: 48px;
  }
}

<WithTheme(ProgressCircle)
  progress={1}
  size={
    Object {
      "large": "jumbo",
      "small": "regular",
    }
  }
>
  <ProgressCircle
    progress={1}
    size={
      Object {
        "large": "jumbo",
        "small": "regular",
      }
    }
    theme="[mocked theme]"
  >
    <styled.svg
      size={
        Object {
          "large": "jumbo",
          "small": "regular",
        }
      }
    >
      <svg
        className="c0"
        size={
          Object {
            "large": "jumbo",
            "small": "regular",
          }
        }
      >
        <ForwardRef
          cx="1em"
          cy="1em"
          stroke="#becedd"
          theme="[mocked theme]"
        >
          <PoseElement
            cx="1em"
            cy="1em"
            elementType="circle"
            innerRef={null}
            poseConfig={
              Object {
                "hover": Object {
                  "fill": [Function],
                  "r": "calc(1em - (5px / 2))",
                  "strokeWidth": 5,
                },
                "init": Object {
                  "fill": [Function],
                  "r": "calc(1em - (3px / 2))",
                  "strokeWidth": 3,
                },
              }
            }
            stroke="#becedd"
            theme="[mocked theme]"
          >
            <circle
              cx="1em"
              cy="1em"
              stroke="#becedd"
            />
          </PoseElement>
        </ForwardRef>
        <ForwardRef
          cx="1em"
          cy="1em"
          fill="transparent"
          pose="ended"
          stroke="currentColor"
          strokeDasharray="314.1592653589793%"
          strokeLinecap="round"
        >
          <PoseElement
            cx="1em"
            cy="1em"
            elementType="circle"
            fill="transparent"
            innerRef={null}
            pose="ended"
            poseConfig={
              Object {
                "ended": Object {
                  "opacity": 0,
                  "transition": Object {
                    "delay": "500",
                    "duration": "500",
                  },
                },
                "hover": Object {
                  "r": "calc(1em - (5px / 2))",
                  "strokeWidth": 5,
                  "transition": Object {
                    "duration": "500",
                  },
                },
                "init": Object {
                  "r": "calc(1em - (3px / 2))",
                  "strokeWidth": 3,
                  "transition": Object {
                    "duration": "500",
                  },
                },
                "playing": Object {
                  "opacity": 1,
                  "strokeDashoffset": 0,
                  "transition": Object {
                    "strokeDashoffset": [Function],
                  },
                },
              }
            }
            stroke="currentColor"
            strokeDasharray="314.1592653589793%"
            strokeLinecap="round"
          >
            <circle
              cx="1em"
              cy="1em"
              fill="transparent"
              stroke="currentColor"
              strokeDasharray="314.1592653589793%"
              strokeLinecap="round"
            />
          </PoseElement>
        </ForwardRef>
      </svg>
    </styled.svg>
  </ProgressCircle>
</WithTheme(ProgressCircle)>
`;
